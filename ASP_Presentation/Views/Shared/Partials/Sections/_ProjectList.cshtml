@model Projects

@{
    var statusKey = Model.StatusId switch
    {
        1 => "ongoing",
        2 => "notstarted",
        3 => "completed",
        _ => "unknown"

    };


    var dropdownId = $"dropdown-{Model.Id}";

    var endDate = Model.EndDate ?? DateTime.Now;
    var totalDaysLeft = (int)Math.Ceiling((endDate - DateTime.Now).TotalDays);
    string timeLeftDisplay;

    if (totalDaysLeft < 0)
    {
        timeLeftDisplay = "Expired";
    }
    else if (totalDaysLeft <= 1) {
        timeLeftDisplay = "Last day";
    }
    else if (totalDaysLeft < 7)
    {
        timeLeftDisplay = $"{totalDaysLeft} day{(totalDaysLeft == 1 ? "" : "s")} left";
    }
    else if (totalDaysLeft < 30)
    {
        var weeksLeft = (int)Math.Ceiling(totalDaysLeft / 7.0);
        timeLeftDisplay = $"{weeksLeft} week{(weeksLeft == 1 ? "" : "s")} left";
    }
    else
    {
        var monthsLeft = (int)Math.Ceiling(totalDaysLeft / 30.0);
        timeLeftDisplay = $"{monthsLeft} month{(monthsLeft == 1 ? "" : "s")} left";
    }

    string timeStatus = totalDaysLeft <= 0
        ? "expired"
        : totalDaysLeft < 14 // du kan justera detta om du vill
            ? "urgent"
            : "on-track";
}

    
<div class="project-card" data-project-status="@statusKey" data-project-enddate="@Model.EndDate?.ToString("yyyy-MM-dd")">
 
    <div class="card-header">
        <img class="project-image" src="@(string.IsNullOrWhiteSpace(Model.Image) ? "/Images/Projecticon.svg" : Model.Image)" />
        
        <div class="text-container">
            <div class="project-name">@Model.ProjectName</div>
            <div class="project-client">@Model.Client?.ClientName</div>
            
        </div>
        <div class="dropdown-container">
            <button class="dropdown-toggle" data-type="dropdown" data-target="#@dropdownId">
                <i class="fa-solid fa-ellipsis-vertical"></i>
            </button>
        
            <div id="@dropdownId" class="dropdown-menu">
                <button class="options-button dropdown-item edit" 
                        data-type="dropdown"
                        data-modal="true"
                        data-target="#editProjectModal"
                        data-id="@Model.Id"
                        data-projectname="@Model.ProjectName"
                        data-description="@Model.Description"
                        data-startdate="@Model.StartDate.ToString("yyyy-MM-dd")"
                        data-enddate="@Model.EndDate?.ToString("yyyy-MM-dd")"
                        data-budget="@Model.Budget"
                        data-clientid="@Model.ClientId"
                        data-memberid="@Model.MemberId"
                        data-statusid="@Model.StatusId"
                        data-image="@Model.Image"
                        data-existingimage="@Model.Image">
                    <i class="fa-solid fa-pen"></i> Edit
                </button>
                <button class="dropdown-item delete" data-id="@Model.Id">
                    <i class="fa-solid fa-trash"></i> Delete Project
                </button>
            </div>
        </div>

    </div>

    <div class="project-desc">
        @(string.IsNullOrWhiteSpace(Model.Description) ? "No description" : Html.Raw(Model.Description))
    </div>


    <div class="card-footer">

        <div class="project-time @timeStatus">
            <span class="time-status">
                <i class="fa-regular fa-clock"></i>
                <span>@timeLeftDisplay</span>
            </span>
        </div>

        <div class="members">
            <img src="/Images/Avatars/Avatar1.svg" class="member-avatar" />
            <img src="/Images/Avatars/Avatar2.svg" class="member-avatar" />
        </div>
    </div>

</div>
