@model Projects

@{
    var statusKey = Model.StatusId switch
    {
        1 => "ongoing",
        2 => "notstarted",
        3 => "completed",
        _ => "unknown"
    };
}

    
<div class="project-card" data-project-status="@statusKey">
    
    <div class="card-header">
        <img class="project-image" src="@(string.IsNullOrWhiteSpace(Model.Image) ? "/Images/Projecticon.svg" : Model.Image)" />
        <div>
            <div class="project-name">@Model.ProjectName</div>
            <div class="project-client">@Model.ClientId</div>
        </div>
        <i class="fa-solid fa-ellipsis-vertical options-button"
           data-modal="true"
           data-target="#editProjectModal"
           data-id="@Model.Id"
           data-projectname="@Model.ProjectName"
           data-description="@Model.Description"
           data-startdate="@Model.StartDate.ToString("yyyy-MM-dd")"
           data-enddate="@Model.EndDate?.ToString("yyyy-MM-dd")"
           data-budget="@Model.Budget"
           data-clientid="@Model.ClientId"
           data-memberid="@Model.MemberId"
           data-statusid="@Model.StatusId">
        </i>
    </div>

    <div class="project-desc">@Model.Description</div>

    <div class="card-footer">
        <div class="project-time">
            <span class="clock-icon">⏱</span>
            
            @{
                var endDate = Model.EndDate ?? DateTime.Now;
                var weeksLeft = (int)Math.Ceiling((endDate - DateTime.Now).TotalDays / 7);
            }
            <span>@weeksLeft weeks left</span>
        </div>
        <div class="members">
            <img src="/Images/Avatars/Avatar1.svg" class="member-avatar" />
            <img src="/Images/Avatars/Avatar2.svg" class="member-avatar" />
        </div>
    </div>
</div>
